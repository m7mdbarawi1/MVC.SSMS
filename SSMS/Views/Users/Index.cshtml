@model IEnumerable<SSMS.Models.User>

@{
    ViewData["Title"] = "Users";
}

<h1>Users</h1>

<a asp-action="Create">Create New</a>

<input type="text" placeholder="Search users by name, username, password, or user type..." />

<table>
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FullName)</th>
            <th>@Html.DisplayNameFor(model => model.UserName)</th>
            <th>@Html.DisplayNameFor(model => model.Password)</th>
            <th>@Html.DisplayNameFor(model => model.UserType)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(m => item.FullName)</td>
                <td>@Html.DisplayFor(m => item.UserName)</td>
                <td>@Html.DisplayFor(m => item.Password)</td>
                <td>@Html.DisplayFor(m => item.UserType)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.UserId">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.UserId">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.UserId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        document.querySelector("input[type='text']").addEventListener("keyup", function () {
            const filter = this.value.toLowerCase();
            const rows = document.querySelectorAll("table tbody tr");

            rows.forEach(row => {
                const values = Array.from(row.cells).map(cell => cell.textContent.toLowerCase());
                const match = values.some(val => val.includes(filter));
                row.style.display = match ? "" : "none";
            });
        });
    </script>
}
